# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: NPM install
        run: npm install
      - name: Prepare staging directory
        shell: bash
        run: |
          mkdir staging
          rsync -a media style.css index.html staging
          rsync -Ra node_modules/reveal.js/dist/{reset,reveal,theme/serif}.css staging
          rsync -Ra node_modules/reveal.js/plugin/highlight/monokai.css staging
          rsync -Ra node_modules/reveal.js/dist/reveal.js staging
          rsync -Ra node_modules/reveal.js/plugin/{zoom/zoom,notes/notes,search/search,markdown/markdown,highlight/highlight}.js staging
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
            path: staging

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write    # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
